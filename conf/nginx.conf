# nginx worker 数量 和CPU保持一致
worker_processes  4;
# 指定错误日志文件路径
error_log  logs/error.log;
pid        logs/openresty.pid;

events {
    use epoll;
    worker_connections 20480;
}

http {
    # 日志格式
    log_format  main '[$time_local] $host $remote_addr "$request_uri" '
                '$status "$bytes_sent" "$request_time" "$upstream_response_time" '
                '"$http_user_agent" "$http_referer" "$http_x_forwarded_for" "$http_cookie" "$uid_set" "$uid_got"';

    lua_package_path "$prefix/resty_modules/lualib/?.lua;$prefix/lua/?.lua;$prefix/lua/redis/?.lua;$prefix/lua/server/?.lua;;";
    lua_package_cpath "$prefix/resty_modules/lualib/?.so;$prefix/lua/?.so;$prefix/lua/redis/?.so;$prefix/lua/server/?.so;;";

    # 避免修改lua需要reload, 生产环境需要设置成on
    lua_code_cache on;

    # 连接阿里云 redis 配置
    resolver 8.8.8.8;
    
    server {
        # 访问日志
        access_log  logs/access.log  main;
        # 监听端口，若端口已经被占用，则需要修改
        listen 8000;

        # 获取状态
        location ~ ^/getStatus {
            # 准入阶段 参数校验
            #access_by_lua_file lua/access_check.lua;

            # 逻辑
            content_by_lua_file lua/server/getStatus.lua;
        }
        # 写入状态
        location ~ ^/setStatus {
            # 准入阶段 参数校验
            #access_by_lua_file lua/access_check.lua;

            # 逻辑
            content_by_lua_file lua/server/setStatus.lua;
        }


        # 获取状态V2
        location ~ ^/V2/getStatus {
            # 准入阶段 参数校验
            #access_by_lua_file lua/access_check.lua;

            # 逻辑
            content_by_lua_file lua/server/getStatusV2.lua;
        }
        # 写入状态V2
        location ~ ^/V2/setStatus {
            # 准入阶段 参数校验
            #access_by_lua_file lua/access_check.lua;

            # 逻辑
            content_by_lua_file lua/server/setStatusV2.lua;
        }

        # 默认路径 测试
        location / {
            default_type text/html;

            content_by_lua '
                ngx.say("HelloWorld")
            ';
        }
    }
}
